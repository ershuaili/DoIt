<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.doit.mapper.UserMapper">

    <resultMap type="com.doit.entity.User" id="UserMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="nickname" column="nickName" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="password" column="password" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="UserMap">
        select id,
               nickName,
               email,
               password
        from db_doit.user
        where id = #{id}
    </select>

    <!-- 通过昵称查询单条数据 -->
    <select id="queryByName" resultMap="UserMap">
        select id,
               nickName,
               email,
               password
        from db_doit.user
        where nickName = #{name}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="UserMap">
        select id,
               nickName,
               email,
               password
        from db_doit.user
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="UserMap">
        select
        id, nickName, email, password
        from db_doit.user
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="nickname != null and nickname != ''">
                and nickName = #{nickname}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="password != null and password != ''">
                and password = #{password}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into db_doit.user(nickName, email, password)
        values (#{nickname}, #{email}, #{password})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into db_doit.user(nickName, email, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.nickname}, #{entity.email}, #{entity.password})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into db_doit.user(nickName, email, password)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.nickname}, #{entity.email}, #{entity.password})
        </foreach>
        on duplicate key update
        nickName = values(nickName) , email = values(email) , password = values(password)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update db_doit.user
        <set>
            <if test="nickname != null and nickname != ''">
                nickName = #{nickname},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="password != null and password != ''">
                password = #{password},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete
        from db_doit.user
        where id = #{id}
    </delete>

</mapper>

